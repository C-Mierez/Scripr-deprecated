.columns {
    --gap: 2rem;
    --timeline-width: 0.5rem;

    display: grid;
    grid-template-columns: 1fr [timelineCol] var(--timeline-width) [contentCol] 1fr;
    grid-gap: var(--gap);

    margin: 0 auto;
    margin-top: calc(var(--padding-side) * 2);

    width: var(--width-main-responsive);
}

.col p {
    font-size: 1.35rem;
}
.col:last-child {
    grid-column-start: contentCol;
    padding-bottom: 20vh;
    padding-bottom: 20dvh;
}

.col > * {
    --padding: calc(var(--padding-side) * 0.5);
    position: relative;
    /* background-color: hsla(0, 0%, 100%, 0.03); */

    margin-bottom: calc(var(--margin-bottom) * 4);
    padding: var(--padding);
}

.col > *:nth-child(odd) {
    translate: calc((100% + var(--gap) * 2 + var(--timeline-width)) * -1) 0;
}

.col > *::after {
    display: block;
    content: "";

    position: absolute;
    top: 0%;

    height: min(3.5rem, max(25%, 1.5rem));
    aspect-ratio: 1;

    border-radius: 50%;

    background: var(--gradient-light);
}

.col > *:nth-child(even)::after {
    left: calc(-1 * (var(--gap) + var(--timeline-width) * 0.5));

    translate: -50% 0;
}

.col > *:nth-child(odd)::after {
    right: calc(-1 * (var(--gap) + var(--timeline-width) * 0.5));

    translate: 50% 0;
}

.timeline {
    background-color: var(--color-secondary-300);
    border-radius: 100vh;
    overflow: hidden;

    grid-column-start: timelineCol;
}

.columns::after {
    --size: 2.5rem;

    content: "";

    position: absolute;
    bottom: calc(var(--size) * -0.5);
    left: calc(50% - var(--size) * 0.5);

    background: var(--color-accent-700);

    height: var(--size);
    aspect-ratio: 1;
    border-radius: 100vh;

    z-index: 10;
}

.fill {
    height: calc(var(--progress) * 101%);
    width: 100%;

    border-radius: 0 0 100vh 100vh;

    background-color: var(--color-accent-700);
}

.col > *::before {
    content: "";

    position: absolute;
    bottom: 0;
    left: calc(var(--padding));

    height: 0.4rem;
    width: calc(50% - (var(--padding) * 2));

    border-radius: 0 0 100vh 100vh;

    background-color: var(--color-accent-700);

    z-index: 10;
    opacity: 0;
}

@keyframes slideInLeft {
    0% {
        opacity: 0;
        transform: translateX(-10%);
    }
    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

@media (max-width: 600px) {
    .columns {
        grid-template-columns: [timelineCol] var(--timeline-width) [contentCol] 1fr;
    }

    .col > *:nth-child(odd) {
        translate: 0 0;
    }

    .col > *:nth-child(odd)::after {
        left: calc(-1 * (var(--gap) + var(--timeline-width) * 0.5));

        translate: -50% 0;
    }

    .columns::after {
        left: calc(0% - var(--size) * 0.5 + var(--timeline-width) * 0.5);
    }

    .col > *::after {
        height: min(2.5rem, max(15%, 1.5rem));
    }
}

.col > * {
    opacity: 0;
    translate: 0 40%;
    transition: opacity 200ms ease, translate 200ms ease;
}

.col p::after {
    transition: scale 400ms ease;
    scale: 0;
}

.col p.itemEnterDone::after {
    scale: 1;
}

.col p.itemEnterDone::before {
    animation: slideInLeft 1s 200ms ease forwards;
}

/* .itemEnter {
}

.itemEnterActive {
} */

.itemEnterDone {
    opacity: 1;
    translate: 0 0;
}

/* .itemExit {
}

.itemExitActive {
}

.itemExitDone {
} */
